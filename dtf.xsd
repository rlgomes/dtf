<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://dtf.org/v1"
           xmlns="http://dtf.org/v1"
           elementFormDefault="qualified">

    <!-- tags that are used on the runner -->
    <xs:group name="script_tags">
        <xs:choice>
            <!-- aggregations -->
            <xs:element ref="sequence" />
            <xs:element ref="parallel" />
            <xs:element ref="for" />
            <xs:element ref="parallelloop" />
            <xs:element ref="switch" />
            <xs:element ref="distribute" />
            <xs:element ref="try" />
            <xs:element ref="timer" />
            <xs:element ref="if" />
            <xs:element ref="local" />
            <xs:element ref="component" />
            <xs:element ref="fail" />
            <xs:element ref="choices" />
            <xs:element ref="while" />
            
            <!-- results tags -->
            <xs:element ref="result" />
            <xs:element ref="testsuite" />
            <xs:element ref="testscript" />
            <xs:element ref="testproperty" />
           
            <!-- event tags --> 
            <xs:element ref="record" />
            <xs:element ref="event" />
            <xs:element ref="query" />
            <xs:element ref="nextresult" />
            <xs:element ref="resetcursor" />
            <xs:element ref="iterate" />
            <xs:element ref="compare" />
            <xs:element ref="filter"/>
          
            <!-- logging tags --> 
            <xs:element ref="log"/>
            
            <!-- statistics tags --> 
            <xs:element ref="stats" />
            
            <!-- function tags -->
            <xs:element ref="function" />
            <xs:element ref="call" />
            
            <!--  basic tags -->
            <xs:element ref="sleep"/>
            
            <!-- properties & range tags -->
            <xs:element ref="property"/>
            
            <!-- string manipulation tags -->
            <xs:element ref="replace"/>
            <xs:element ref="diff"/>
            
            <xs:group ref="common_commands"/>
           
            <!-- header group definition --> 
            <xs:element ref="headergroup"/>
            <xs:element ref="cookiegroup"/>
            <xs:element ref="http_config"/>
            
            <xs:element ref="assert"/>
        </xs:choice>
    </xs:group>  
   
    <xs:group name="common_commands">
        <xs:choice>
            <!-- property & range tags -->
            <xs:element ref="property" />
            <xs:element ref="createrange" />
            <xs:element ref="unset"/>
            
            <!-- basic command tags --> 
            <xs:element ref="sleep" />
            <xs:element ref="echo" />
            <xs:element ref="fail" />
            <xs:element ref="break"/>
           
            <!-- logging tags --> 
            <xs:element ref="log"/>
            <xs:element ref="cat"/>
            
            <!-- file tags --> 
            <xs:element ref="monitor_create"/>
            <xs:element ref="monitor_destroy"/>
            <xs:element ref="monitor_grep"/>
            <xs:element ref="monitor_diff"/>
           
            <!-- event command tags --> 
            <xs:element ref="event" />
            <xs:element ref="attribute" />

            <!-- http tags -->
            <xs:element ref="http_get" />
            <xs:element ref="http_post" />
            <xs:element ref="http_put" />
            <xs:element ref="http_head" />
            <xs:element ref="http_delete" />
            <xs:element ref="http_request" />
            <xs:element ref="http_server" />
            <xs:element ref="http_response" />
            <xs:element ref="urlencode" />

            <!-- string manipulation tags -->
            <xs:element ref="replace"/>
            
            <!-- arithmetic tags -->
            <xs:element ref="add"/>
            <xs:element ref="mod"/>
            <xs:element ref="abs"/>
            <xs:element ref="subtract"/>
            <xs:element ref="multiply"/>
            <xs:element ref="divide"/>

            <!-- share creation/management tags -->
            <xs:element ref="share_create"/>
            <xs:element ref="share_destroy"/>
            <xs:element ref="share_get"/>
            <xs:element ref="share_set"/>
            <xs:element ref="share_wait"/>
            
            <!-- rendezvous tags -->
            <xs:element ref="rendezvous_create"/>
            <xs:element ref="rendezvous_destroy"/>
            <xs:element ref="rendezvous_check"/>
            <xs:element ref="rendezvous_visit"/>
            <xs:element ref="rendezvous_reset"/>
            
            <!-- string parsing -->
            <xs:element ref="printf"/>
            <xs:element ref="scanf"/> 
        </xs:choice>
    </xs:group> 

    <xs:group name="component_commands">
        <xs:choice>
            <!-- component specific tags -->
            <xs:element ref="getfile" />
            <xs:element ref="stopcomponent" />
            <xs:element ref="call" />
            
            <xs:group ref="common_commands"/>

		    <xs:element name="sequence">
		        <xs:complexType>
		            <xs:choice minOccurs="0" maxOccurs="unbounded">
		                <xs:group ref="component_commands" />
		            </xs:choice>
		        </xs:complexType>
		    </xs:element>

		    <xs:element name="parallel">
		        <xs:complexType>
		            <xs:choice minOccurs="0" maxOccurs="unbounded">
		                <xs:group ref="component_commands" />
		            </xs:choice>
		        </xs:complexType>
		    </xs:element>
            
            <xs:element name="for">
                <xs:complexType>
                    <xs:choice maxOccurs="unbounded">
                        <xs:group ref="component_commands" />
                    </xs:choice>
                    <xs:attributeGroup ref="aggregation_properties"/>
                </xs:complexType>
            </xs:element>

            <xs:element name="parallelloop">
                <xs:complexType>
                    <xs:choice maxOccurs="unbounded">
                        <xs:group ref="component_commands" />
                    </xs:choice>
                    <xs:attributeGroup ref="aggregation_properties"/>
                </xs:complexType>
            </xs:element>

		    <xs:element name="while">
		        <xs:complexType>
		            <xs:sequence>
		                <xs:group ref="conditionals" minOccurs="0" maxOccurs="1" />
		                <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:group ref="component_commands" />
		                </xs:choice>
		            </xs:sequence>
		        </xs:complexType>
		    </xs:element>

            <xs:element name="timer">
                <xs:complexType>
                    <xs:choice maxOccurs="unbounded">
                        <xs:group ref="component_commands" />
                    </xs:choice>
                    <xs:attribute name="interval" type="xs:string" use="required" />
                    <xs:attribute name="property" type="xs:string" use="optional" />
                </xs:complexType>
            </xs:element>
            
            <xs:element name="distribute">
                <xs:complexType>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:group ref="component_commands" />
                    </xs:choice>
                    <xs:attributeGroup ref="distribute_attribs"/>
                </xs:complexType>
            </xs:element>
            
            <xs:element name="choices">
                <xs:complexType>
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element name="choose">
                            <xs:complexType>
                                <xs:choice maxOccurs="unbounded">
                                    <xs:group ref="component_commands" />
                                </xs:choice>
                                <xs:attribute name="howoften" use="required"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:choice>
                </xs:complexType>
            </xs:element>

            <xs:element name="switch">
                <xs:complexType>
                    <xs:sequence>
                       <xs:element name="case" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:group ref="conditionals" minOccurs="0" maxOccurs="1" />
                                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                                        <xs:group ref="component_commands" />
                                    </xs:choice>
                                </xs:sequence>
                                <xs:attribute name="value" type="xs:string" use="optional" />
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="default" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:choice minOccurs="0" maxOccurs="unbounded">
                                    <xs:group ref="component_commands" />
                                </xs:choice>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="property" type="xs:string" use="optional" />
                </xs:complexType>
            </xs:element>
           
            <xs:element name="if">
		        <xs:complexType>
		            <xs:sequence>
		                <xs:group ref="conditionals"/>
                        <xs:element name="then" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:choice minOccurs="0" maxOccurs="unbounded">
                                    <xs:group ref="component_commands" />
                                </xs:choice>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="else" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:choice minOccurs="0" maxOccurs="unbounded">
                                    <xs:group ref="component_commands" />
                                </xs:choice>
                            </xs:complexType>
                        </xs:element> 
		            </xs:sequence>
		        </xs:complexType>
		    </xs:element>
            
		    <xs:element name="try">
		        <xs:complexType>
		            <xs:sequence>
		                <xs:choice>
		                    <xs:group ref="component_commands" />
		                </xs:choice>
                	    <xs:element name="catch" 
                                    minOccurs="0"
                                    maxOccurs="unbounded">
                	        <xs:complexType>
                	            <xs:choice>
                	                <xs:group ref="component_commands"/>
                	            </xs:choice>
                	            <xs:attribute name="exception" type="xs:string" use="optional" />
                	            <xs:attribute name="property" type="xs:string" use="optional" />
                	        </xs:complexType>
                	    </xs:element>
                        <xs:element name="finally"
                                    minOccurs="0"
                                    maxOccurs="1">
                            <xs:complexType>
                                <xs:choice>
                                    <xs:group ref="component_commands"/>
                                </xs:choice>
                            </xs:complexType>
                        </xs:element>
		            </xs:sequence>
		        </xs:complexType>
		    </xs:element>

		    <xs:element name="assert">
		        <xs:complexType>
		            <xs:sequence>
		                <xs:group ref="conditionals"/>
		            </xs:sequence>
                    <xs:attribute name="message" type="xs:string" use="optional" />
		        </xs:complexType>
		    </xs:element>
        </xs:choice>
    </xs:group>
    
    <xs:group name="local_commands">
        <xs:choice>
            <!-- property and function definition tags -->
            <xs:element ref="createstorage" />
            <xs:element ref="loadproperties" />
            <xs:element ref="import" />

            <xs:element ref="cat" />
           
            <!-- component locking tags --> 
            <xs:element ref="lockgroup"/>
            <xs:element ref="lockcomponent" />
            <xs:element ref="unlockcomponent" />
            
            <xs:group ref="common_commands"/>
        </xs:choice>
    </xs:group> 
   
    <!-- root element is script --> 
    <xs:element name="script">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="info" />
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:group ref="script_tags" />
                </xs:choice>
            </xs:sequence>
            <xs:attribute name="name" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>

    <xs:group name="info_tags">
        <xs:choice>
            <xs:sequence>
	            <xs:element ref="author" />
	            <xs:element ref="description" minOccurs="0"/>
            </xs:sequence>
        </xs:choice>
    </xs:group>
    
    <xs:element name="info">
        <xs:complexType>
            <xs:group ref="info_tags"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="author">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="name" />
                <xs:element ref="email" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="name"/> 
    <xs:element name="email"/>
    <xs:element name="description"/>
    
    <xs:element name="function">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="param" minOccurs="0" maxOccurs="unbounded" />
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:group ref="script_tags"/>
                </xs:choice>
                <xs:element ref="return" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="name"   type="xs:string" use="required" />
            <xs:attribute name="export" type="xs:string" default="false"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="return">
        <xs:complexType mixed="true"/>
    </xs:element>
    
    <xs:element name="param">
        <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required" />
            <xs:attribute name="default"/>
            <xs:attribute name="type" default="optional">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="optional" />
                        <xs:enumeration value="required" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="call">
        <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="property" />
            </xs:sequence>
            <xs:attribute name="function" type="xs:string" use="required" />
            <xs:attribute name="result" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="import">
        <xs:complexType>
            <xs:attribute name="uri" type="xs:string" use="required" />
            <xs:attribute name="loadFuncs" type="xs:string" default="true" />
            <xs:attribute name="loadRefs" type="xs:string" default="true" />
        </xs:complexType>
    </xs:element>

    <!-- testsuite/testcase definition tags --> 
    <xs:element name="testsuite">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="script_tags"/> 
            </xs:choice>
            <xs:attribute name="name" type="xs:string" use="required" />
            <xs:attribute name="continueOnFailure" type="xs:string" default="true" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="testscript">
        <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="script_tags" />
            </xs:sequence>
            <xs:attribute name="uri" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="testproperty">
        <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required" />
            <xs:attribute name="value" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>
   
    <!-- aggregation tags --> 
    <xs:element name="timer">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:group ref="script_tags" />
            </xs:choice>
            <xs:attribute name="interval" type="xs:string" use="required" />
            <xs:attribute name="property" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="sequence">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="script_tags" />
            </xs:choice>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="parallel">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="script_tags" />
            </xs:choice>
        </xs:complexType>
    </xs:element>

    <xs:element name="try">
        <xs:complexType>
            <xs:sequence>
                <xs:choice>
                    <xs:group ref="script_tags" />
                </xs:choice>
                <xs:element ref="catch" minOccurs="0" maxOccurs="unbounded" />
                <xs:element ref="finally" minOccurs="0" maxOccurs="1" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="catch">
        <xs:complexType>
            <xs:choice>
                <xs:group ref="script_tags" />
            </xs:choice>
            <xs:attribute name="exception" type="xs:string" use="optional" />
            <xs:attribute name="property" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="finally">
        <xs:complexType>
            <xs:choice>
                <xs:group ref="script_tags" />
            </xs:choice>
        </xs:complexType>
    </xs:element>
   
    <xs:element name="local">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="local_commands"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="component">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="component_commands"/>
            </xs:choice>
            <xs:attribute name="id" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="loadproperties">
        <xs:complexType>
            <xs:attribute name="uri"       type="xs:string" use="required" />
            <xs:attribute name="overwrite" type="xs:string" use="optional" />
            <xs:attribute name="encoding"  type="xs:string" default="UTF-8" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="cat">
        <xs:complexType mixed="true">
            <xs:attribute name="uri" type="xs:string" use="required" />
            <xs:attribute name="append" type="xs:string" default="true" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="log">
        <xs:complexType mixed="true">
            <xs:attribute name="tag" type="xs:string" default="log" />
            <xs:attribute name="level" type="xs:string" default="info" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="echo">
        <xs:complexType mixed="true">
            <xs:attribute name="message" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>

    <xs:element name="lockgroup">
        <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="lockcomponent"/>
            </xs:sequence>
            <xs:attribute name="timeout" type="xs:string" default="-1" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="lockcomponent">
        <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="attrib" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:string" use="required" />
            <xs:attribute name="name" type="xs:string" use="optional" />
            <xs:attribute name="timeout" type="xs:string" default="60s" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="attrib">
        <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="optional" />
            <xs:attribute name="value" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="unlockcomponent">
        <xs:complexType>
            <xs:attribute name="id" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="stopcomponent">
        <xs:complexType />
    </xs:element>
    
    <xs:element name="createstorage">
        <xs:complexType>
            <xs:attribute name="id" type="xs:string" use="required" />
            <xs:attribute name="path" type="xs:string" use="required" />
            <xs:attribute name="export" type="xs:string" default="false" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="createrange">
        <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required" />
            <xs:attribute name="value" type="xs:string" use="required" />
            <xs:attribute name="recycle" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="putfile">
        <xs:complexType>
            <xs:attribute name="uri" type="xs:string" use="required" />
            <xs:attribute name="remotefile" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="getfile">
        <xs:complexType>
            <xs:attribute name="uri" type="xs:string" use="required" />
            <xs:attribute name="remotefile" type="xs:string" use="required" />
            <xs:attribute name="append" type="xs:string" default="false" />
            <xs:attribute name="compress" type="xs:string" default="false" />
        </xs:complexType>
    </xs:element>

    <xs:element name="monitor_create">
        <xs:complexType>
            <xs:attribute name="id"         type="xs:string" use="required" />
            <xs:attribute name="file"       type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>

    <xs:element name="monitor_destroy">
        <xs:complexType>
            <xs:attribute name="id"         type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>

    <xs:element name="monitor_diff">
        <xs:complexType>
            <xs:attribute name="id"         type="xs:string" use="required" />
            <xs:attribute name="update"      type="xs:string" default="false" />
        </xs:complexType>
    </xs:element>

    <xs:element name="monitor_grep">
        <xs:complexType>
            <xs:attribute name="id"          type="xs:string" use="required" />
            <xs:attribute name="expression"  type="xs:string" use="required" />
            <xs:attribute name="insensitive" type="xs:string" default="false" />
            <xs:attribute name="update"      type="xs:string" default="false" />
        </xs:complexType>
    </xs:element>

    <xs:element name="fail">
        <xs:complexType mixed="true">
            <xs:attribute name="message" type="xs:string"/>
        </xs:complexType>
    </xs:element>
   
    <xs:attributeGroup name="aggregation_properties">
        <xs:attribute name="property" type="xs:string" use="required" />
        <xs:attribute name="range" type="xs:string" use="required" />
    </xs:attributeGroup> 
    
    <xs:element name="for">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="script_tags" />
            </xs:choice>
            <xs:attributeGroup ref="aggregation_properties"/>
        </xs:complexType>
    </xs:element>
   
    <xs:attributeGroup name="distribute_attribs">
        <!-- can't make either range or workers attribute till I can completely
             deprecate and remove the workers attribute. -->
        <xs:attribute name="workers"    type="xs:string" use="optional" />
        <xs:attribute name="range"      type="xs:string" use="optional" />
        
        <xs:attribute name="func"       type="xs:string" use="optional" />
        <xs:attribute name="iterations" type="xs:string" use="optional" />
        <xs:attribute name="timer"      type="xs:string" use="optional" />
        <xs:attribute name="unit"       type="xs:string" default="1s" />
        <xs:attribute name="property"   type="xs:string" use="optional" />
        <xs:attribute name="id"         type="xs:string" use="optional" />
    </xs:attributeGroup> 
    
    <xs:element name="distribute">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="script_tags" />
            </xs:choice>
            <xs:attributeGroup ref="distribute_attribs"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="parallelloop">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:group ref="script_tags" />
            </xs:choice>
            <xs:attributeGroup ref="aggregation_properties"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="choose">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:group ref="script_tags" />
            </xs:choice>
            <xs:attribute name="howoften" use="required"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="choices">
        <xs:complexType>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element ref="choose"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="fetchresult">
        <xs:complexType>
            <xs:attribute name="cursor" type="xs:string" use="required" />
            <xs:attribute name="recycle" type="xs:string" use="optional" />
            <xs:attribute name="fetchsize" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>

    <xs:element name="sleep">
        <xs:complexType>
            <xs:attribute name="time" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="result">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:any namespace="##any"/> 
            </xs:choice>    
            <xs:attribute name="uri" type="xs:string" use="optional" />
            <xs:attribute name="type" type="xs:string" default="xml" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="record">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="attribute" minOccurs="0" maxOccurs="unbounded" />
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:group ref="script_tags" />
                </xs:choice>
            </xs:sequence>
            <xs:attribute name="uri"        type="xs:string" use="optional" />
            <xs:attribute name="type"       type="xs:string" default="txt" />
            <xs:attribute name="event"      type="xs:string" use="optional" />
            <xs:attribute name="append"     type="xs:string" default="false" />
            <xs:attribute name="encoding"   type="xs:string" default="UTF-8"/>

            <xs:attribute name="refid"      type="xs:string" use="optional" />
            <xs:attribute name="id"      type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="event">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:any namespace="##any"/> 
            </xs:choice>    
            <xs:attribute name="name"  type="xs:string" use="optional" />
            <xs:attribute name="id"    type="xs:string" use="optional" />
            <xs:attribute name="refid" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="stats">
        <xs:complexType>
            <xs:attribute name="cursor"  type="xs:string" use="required" />
            <xs:attribute name="event"   type="xs:string" use="required" />
            <xs:attribute name="monitor" type="xs:string" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="property">
        <xs:complexType mixed="true">
            <xs:attribute name="name" type="xs:string" use="required" />
            <xs:attribute name="value" type="xs:string" use="optional" />
            <xs:attribute name="uri" type="xs:string" use="optional" />
            <xs:attribute name="overwrite" type="xs:string" use="optional" />
            <xs:attribute name="encoding" type="xs:string" default="UTF-8" />
        </xs:complexType>
    </xs:element>

    <xs:element name="unset">
        <xs:complexType>
            <xs:attribute name="property" type="xs:string"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="attribute">
        <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required" />
            <xs:attribute name="value" type="xs:string" use="required" />
            <xs:attribute name="type" type="xs:string" default="string" />
            <xs:attribute name="index" type="xs:string" use="optional" />
            <xs:attribute name="length" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="nextresult">
        <xs:complexType>
            <xs:attribute name="cursor" type="xs:string" use="required" />
            <xs:attribute name="recycle" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="iterate">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="script_tags" />
            </xs:choice>
            <xs:attribute name="cursor" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="resetcursor">
        <xs:complexType>
            <xs:attribute name="cursor" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="query">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="select" minOccurs="0" maxOccurs="1" />
                <xs:element ref="where" minOccurs="0" maxOccurs="1" />
            </xs:sequence>
            <xs:attribute name="uri"      type="xs:string" use="required" />
            <xs:attribute name="cursor"   type="xs:string" use="required" />
            <xs:attribute name="type"     type="xs:string" default="txt" />
            <xs:attribute name="event"    type="xs:string" use="optional" />
            <xs:attribute name="encoding" default="UTF-8"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="select">
        <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="field" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="field">
        <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required" />
            <xs:attribute name="type" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="where">
        <xs:complexType>
            <xs:group ref="comparison_conditionals"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="compare">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="query" minOccurs="1" maxOccurs="2"/>
	            <xs:element ref="where" minOccurs="0"/>
	            <xs:element ref="validate"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="filter">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="1" minOccurs="0" ref="select"/>
                <xs:element maxOccurs="1" minOccurs="0" ref="where"/>
            </xs:sequence>
            <xs:attribute name="srcuri" use="required"/>
            <xs:attribute name="dsturi" use="required"/>
            <xs:attribute default="txt" name="type"/>
            <xs:attribute name="event" use="required"/>
            <xs:attribute name="encoding" type="xs:string" default="UTF-8"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="validate">
        <xs:complexType>
            <xs:sequence minOccurs="1" maxOccurs="unbounded">
                <xs:group ref="script_tags"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="and">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="conditionals"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    
   <xs:element name="not">
        <xs:complexType>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:group ref="conditionals"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="or">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="conditionals"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="gt">
        <xs:complexType>
            <xs:attribute name="op1" type="xs:string" use="required" />
            <xs:attribute name="op2" type="xs:string" use="required" />
            <xs:attribute name="type" type="xs:string" default="string" />
            <xs:attribute name="nullable" type="xs:string" default="false" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="lt">
        <xs:complexType>
            <xs:attribute name="op1" type="xs:string" use="required" />
            <xs:attribute name="op2" type="xs:string" use="required" />
            <xs:attribute name="type" type="xs:string" default="string" />
            <xs:attribute name="nullable" type="xs:string" default="false" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="eq">
        <xs:complexType>
            <xs:attribute name="op1" type="xs:string" use="required" />
            <xs:attribute name="op2" type="xs:string" use="required" />
            <xs:attribute name="type" type="xs:string" default="string" />
            <xs:attribute name="nullable" type="xs:string" default="false" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="neq">
        <xs:complexType>
            <xs:attribute name="op1" type="xs:string" use="required" />
            <xs:attribute name="op2" type="xs:string" use="required" />
            <xs:attribute name="type" type="xs:string" default="string" />
            <xs:attribute name="nullable" type="xs:string" default="false" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="within">
        <xs:complexType>
            <xs:attribute name="op1" type="xs:string" use="required" />
            <xs:attribute name="op2" type="xs:string" use="required" />
            <xs:attribute name="tolerance" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>

    <xs:element name="isset">
        <xs:complexType>
            <xs:attribute name="property" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>
   
    <xs:group name="conditionals">
        <xs:choice>
            <xs:group ref="comparison_conditionals"/>
            <xs:element ref="rendezvous_check" />
            <xs:element ref="rendezvous_exists" />
            <xs:element ref="share_exists" />
        </xs:choice>
    </xs:group>
    
    <xs:group name="comparison_conditionals">
        <xs:choice>
             <xs:element name="false" />
             <xs:element name="true" />
             
             <xs:element ref="not" />
             <xs:element ref="and" />
             <xs:element ref="eq" />
             <xs:element ref="gt" />
             <xs:element ref="lt" />
             <xs:element ref="neq" />
             <xs:element ref="or" />
             <xs:element ref="within" />
            
             <xs:element ref="match" />
             
             <xs:element ref="isset" />
        </xs:choice>
    </xs:group>
    
    <xs:element name="if">
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="conditionals"/>
                <xs:element ref="then" minOccurs="0" maxOccurs="1" />
                <xs:element ref="else" minOccurs="0" maxOccurs="1" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="assert">
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="conditionals"/>
            </xs:sequence>
            <xs:attribute name="message" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="then">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="script_tags" />
            </xs:choice>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="else">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="script_tags" />
            </xs:choice>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="switch">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="case" minOccurs="0" maxOccurs="unbounded" />
                <xs:element ref="default" minOccurs="0" maxOccurs="1" />
            </xs:sequence>
            <xs:attribute name="property" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="case">
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="conditionals" minOccurs="0" maxOccurs="1" />
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:group ref="script_tags" />
                </xs:choice>
            </xs:sequence>
            <xs:attribute name="value" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="default">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="script_tags" />
            </xs:choice>
        </xs:complexType>
    </xs:element>

    <xs:element name="while">
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="conditionals" minOccurs="0" maxOccurs="1" />
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:group ref="script_tags" />
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="break"/>

    <xs:element name="replace">
        <xs:complexType>
            <xs:attribute name="source"      type="xs:string" use="required" />
            <xs:attribute name="destination" type="xs:string" use="required" />
            <xs:attribute name="expression"  type="xs:string" use="required" />
            <xs:attribute name="with"        type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>

    <xs:element name="match">
        <xs:complexType>
            <xs:attribute name="source"      type="xs:string" use="required" />
            <xs:attribute name="expression"  type="xs:string" use="required" />
            <xs:attribute name="insensitive" type="xs:string" default="false" />
            <xs:attribute name="partial"     type="xs:string" default="false" />
        </xs:complexType>
    </xs:element>

    <!-- http tags --> 
    <xs:attributeGroup name="http_attributes">
        <xs:attribute name="uri" type="xs:string" use="required" />
        <xs:attribute name="perfrun" type="xs:string" default="false" />
        <xs:attribute name="acceptredirects" type="xs:string" default="true" />
        <xs:attribute name="onFailure" type="xs:string" default="fail" />
        <xs:attribute name="connecttimeout" type="xs:string" default="5s" />
        <xs:attribute name="hash" default="SHA-1"/>
        <xs:attribute name="bandwidth" />
    </xs:attributeGroup>
    
    <xs:group name="http_tags">
          <xs:choice>
            <xs:element ref="http_config" />
            <xs:element ref="headergroup" />
            <xs:element ref="cookiegroup" />
            <xs:element ref="cookie"      />
            <xs:element ref="header"      />
        </xs:choice>
    </xs:group>
    
    <xs:element name="http_config">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="proxy" minOccurs="0" maxOccurs="1" />
                <xs:element ref="credentials" minOccurs="0" maxOccurs="1" />
            </xs:sequence>
            <xs:attribute name="id"    type="xs:string" />
            <xs:attribute name="refid" type="xs:string" />
            <xs:attribute name="expectcontinue" default="false"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="proxy">
        <xs:complexType>
            <xs:attribute name="host" type="xs:string" use="required"/>
            <xs:attribute name="port" type="xs:string" default="3128"/>

            <xs:attribute name="username" type="xs:string" />
            <xs:attribute name="password" type="xs:string" />
        </xs:complexType>
    </xs:element>

    <xs:element name="credentials">
        <xs:complexType>
            <xs:attribute name="username" type="xs:string" />
            <xs:attribute name="password" type="xs:string" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="http_get">
        <xs:complexType>
            <xs:group ref="http_tags" minOccurs="0" maxOccurs="unbounded"/>
            <xs:attributeGroup ref="http_attributes"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="http_post">
        <xs:complexType>
            <xs:sequence>
                <xs:group   ref="http_tags" minOccurs="0" maxOccurs="unbounded"/>
	            <xs:element ref="entity"    minOccurs="0" maxOccurs="1" />
            </xs:sequence>
            <xs:attributeGroup ref="http_attributes"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="http_put">
        <xs:complexType>
            <xs:sequence>
                <xs:group   ref="http_tags" minOccurs="0" maxOccurs="unbounded"/>
	            <xs:element ref="entity"    minOccurs="0" maxOccurs="1" />
            </xs:sequence>
            <xs:attributeGroup ref="http_attributes"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="http_head">
        <xs:complexType>
            <xs:group ref="http_tags" minOccurs="0" maxOccurs="unbounded"/>
            <xs:attributeGroup ref="http_attributes"/>
        </xs:complexType>
    </xs:element>
   
    <xs:element name="http_delete">
        <xs:complexType>
            <xs:group ref="http_tags" minOccurs="0" maxOccurs="unbounded"/>
            <xs:attributeGroup ref="http_attributes"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="http_request">
        <xs:complexType>
            <xs:sequence>
                <xs:group   ref="http_tags" minOccurs="0" maxOccurs="unbounded"/>
	            <xs:element ref="entity"    minOccurs="0" maxOccurs="1" />
            </xs:sequence>
            <xs:attributeGroup ref="http_attributes"/>
            <xs:attribute name="method" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="urlencode">
        <xs:complexType>
            <xs:attribute name="source" type="xs:string" use="required" />
            <xs:attribute name="result" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>

    <xs:element name="header">
        <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required" />
            <xs:attribute name="value" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>

    <xs:element name="headergroup">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="header" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:string" use="optional" />
            <xs:attribute name="refid" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>

    <xs:element name="cookie">
        <xs:complexType>
            <xs:attribute name="name"   type="xs:string" use="required" />
            <xs:attribute name="value"  type="xs:string" use="required" />
            <xs:attribute name="domain" type="xs:string" use="required" />
            <xs:attribute name="path"   type="xs:string" use="required" />
            
            <xs:attribute name="comment"    type="xs:string" default=""/>
            <xs:attribute name="version"    type="xs:string" default="0" />
            <xs:attribute name="expirydate" type="xs:string" default="Mon Jan 01 00:00:00 PDT 2038" />
            <xs:attribute name="secure"     type="xs:string" default="false" />
        </xs:complexType>
    </xs:element>

    <xs:element name="cookiegroup">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="cookie" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:string" use="optional" />
            <xs:attribute name="refid" type="xs:string" use="optional" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="entity">
        <xs:complexType mixed="true">
            <xs:attribute name="value" type="xs:string" />
        </xs:complexType>
    </xs:element>

    <xs:element name="http_server">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="http_listener"
                            minOccurs="0"
                            maxOccurs="unbounded" />
            </xs:sequence>
            <xs:attribute name="host" type="xs:string" default="127.0.0.1"/>
            <xs:attribute name="port" type="xs:string" default="80"/>
            <xs:attribute name="command" type="xs:string" default="start"/>
            <xs:attribute name="threads" default="4"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="http_listener">
        <xs:complexType>
            <xs:group ref="component_commands" minOccurs="0" maxOccurs="unbounded" />
            <xs:attribute name="path" type="xs:string" use="required"/>
            <xs:attribute name="method" type="xs:string" default="*"/>
            <xs:attribute name="perfrun" type="xs:string" default="false"/>
            <xs:attribute name="hash" type="xs:string" default="SHA-1"/>
            <xs:attribute name="bandwidth"/>
        </xs:complexType>
    </xs:element>

    <xs:group name="http_server_tags">
          <xs:choice>
            <xs:element ref="headergroup" />
            <xs:element ref="cookiegroup" />
            <xs:element ref="cookie"      />
            <xs:element ref="header"      />
        </xs:choice>
    </xs:group>

    <xs:element name="http_response">
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="http_server_tags"
                          minOccurs="0"
                          maxOccurs="unbounded"/>
                            
	            <xs:element ref="entity"
                            minOccurs="0"
                            maxOccurs="1" />
            </xs:sequence>
            <xs:attribute name="status" type="xs:integer" use="required"/>
            <xs:attribute name="message" type="xs:string"/>
            <xs:attribute name="bandwidth"/>
        </xs:complexType>
    </xs:element>
    
    <!-- rendezvous tags -->
    <xs:element name="rendezvous_create">
        <xs:complexType>
            <xs:attribute name="id"      type="xs:string" use="required" />
            <xs:attribute name="parties" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>

    <xs:element name="rendezvous_destroy">
        <xs:complexType>
            <xs:attribute name="id"      type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>

    <xs:element name="rendezvous_check">
        <xs:complexType>
            <xs:attribute name="id"      type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="rendezvous_exists">
        <xs:complexType>
            <xs:attribute name="id"      type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>
    
    <xs:element name="rendezvous_visit">
        <xs:complexType>
            <xs:attribute name="id"      type="xs:string" use="required" />
            <xs:attribute name="timeout" type="xs:string" default="-1" />
        </xs:complexType>
    </xs:element>

    <xs:element name="rendezvous_reset">
        <xs:complexType>
            <xs:attribute name="id"      type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>
    
    <!-- arithmetic tags -->
    <xs:attributeGroup name="arithmetic_operators">
        <xs:attribute name="op1" use="required"/>
        <xs:attribute name="op2" use="required"/>
        <xs:attribute name="result" use="required"/>
    </xs:attributeGroup>
    
    <xs:element name="add">
        <xs:complexType>
            <xs:attributeGroup ref="arithmetic_operators"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="mod">
        <xs:complexType>
            <xs:attributeGroup ref="arithmetic_operators"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="abs">
        <xs:complexType>
            <xs:attribute name="op1" use="required"/>
            <xs:attribute name="result" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="subtract">
        <xs:complexType>
            <xs:attributeGroup ref="arithmetic_operators"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="divide">
        <xs:complexType>
            <xs:attributeGroup ref="arithmetic_operators"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="multiply">
        <xs:complexType>
            <xs:attributeGroup ref="arithmetic_operators"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="share_create">
        <xs:complexType>
            <xs:attribute name="id" use="required"/>
            <xs:attribute name="type" default="single"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="share_destroy">
        <xs:complexType>
            <xs:attribute name="id" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="share_get">
        <xs:complexType>
            <xs:attribute name="id" use="required"/>
            <xs:attribute name="blocking" default="false"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="share_wait">
        <xs:complexType>
            <xs:attribute name="id" use="required"/>
            <xs:attribute name="timeout" default="0"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="share_set">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element ref="call"/>
                <xs:group ref="common_commands"/>
            </xs:choice>
            <xs:attribute name="id" use="required"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="share_exists">
        <xs:complexType>
            <xs:attribute name="id" use="required"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="diff">
        <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="input"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="input">
        <xs:complexType mixed="true">
            <xs:attribute name="uri"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="printf">
        <xs:complexType>
            <xs:attribute name="format"/>
            <xs:attribute name="property"/>
            <xs:attribute name="args"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="scanf">
        <xs:complexType>
            <xs:attribute name="format"/>
            <xs:attribute name="input"/>
            <xs:attribute name="args"/>
        </xs:complexType>
    </xs:element>

<!-- START deploy config elements -->
    <xs:element name="setup">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="dtfc" minOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="dtfc">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="property" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="dtfa" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="dtfx" minOccurs="0" maxOccurs="1"/>
            </xs:choice>
            <xs:attribute name="host"/>
            <xs:attribute name="user"/>
            <xs:attribute name="path"/>
            <xs:attribute name="rsakey"/>
            <xs:attribute name="wrapcmd"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="dtfa">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="property" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="user"/>
            <xs:attribute name="host"/>
            <xs:attribute name="path"/>
            <xs:attribute name="rsakey"/>
            <xs:attribute name="wrapcmd"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="dtfx">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="property" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="user"/>
            <xs:attribute name="host"/>
            <xs:attribute name="path"/>
            <xs:attribute name="test"/>
            <xs:attribute name="logs"/>
            <xs:attribute name="rsakey"/>
            <xs:attribute name="wrapcmd"/>
        </xs:complexType>
    </xs:element>
<!--END deploy config elements -->
</xs:schema>
