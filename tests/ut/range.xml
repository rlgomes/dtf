<?xml version="1.0" encoding="UTF-8"?>

<script xmlns="http://dtf.org/v1" name="range">
    <info>
        <author>
            <name>Rodney Gomes</name>
            <email>rlgomes@yahoo-inc.com</email>
        </author>
        <description>DTF range expression unit test.</description>
    </info>
    
    <local>
        <createstorage id="INPUT" path="${dtf.xml.path}/input"/>
        <loadproperties uri="storage://INPUT/ut.properties"/>

        <createrange name="testrange" value="random(0..5)"/>
    </local>
    
    <createrange name="testrange" value="1,2,3,4,5"/>
    <for property="prop" range="1..5">
        <assert><eq op1="${testrange}" op2="${prop}"/></assert>
    </for>
    
    <createrange name="testrange" value="1,2,3,4,5"/>
    <for property="prop" range="1..5.0">
        <assert><eq op1="${testrange}" op2="${prop}"/></assert>
    </for>

    <createrange name="testrange" value="1,2,3,4,5"/>
    <for property="prop" range="1.0..5.0">
        <assert><eq op1="${testrange}" op2="${prop}"/></assert>
    </for>

    <createrange name="testrange" value="5,4,3,2,1"/>
    <for property="prop" range="5..1">
        <assert><eq op1="${testrange}" op2="${prop}"/></assert>
    </for>
    
    <createrange name="testrange" value="5,4,3,2,1"/>
    <for property="prop" range="5.0..1">
        <assert><eq op1="${testrange}" op2="${prop}"/></assert>
    </for>

    <createrange name="testrange" value="5,4,3,2,1"/>
    <for property="prop" range="5.0..1.0">
        <assert><eq op1="${testrange}" op2="${prop}"/></assert>
    </for>

    <!-- Validate that ranges with elements that are spaces still work -->
    <createrange name="range" value="1..4"/> 
    <try>
        <for property="prop" range=" , , , ">
            <assert><eq op1="${prop}" op2=" "/></assert>
        </for>
        <catch exception="${dtf.NoMoreResultsException}">
            <fail message="Mismatch on the number of elements in the two ranges above."/>
        </catch>
    </try>
    
    <!-- Empty range shouldn't execute the children -->
    <for property="j" range="">
        <fail message="This shouldn't have executed."/>
    </for>    
    
    <!-- simple distribute use to fail with an NPE in the RangeFactory --> 
    <distribute range="1" iterations="100"/>
   
    <createrange name="data" value="1a4,1a5,2a4,2a5,3a4,3a5"/>    
    <for property="prop" range="[1..3][a][4..5]">
        <assert><eq op1="${data}" op2="${prop}"/></assert>
    </for>

    <createrange name="data" value="t-1-id,t-2-id,t-3-id,t-4-id"/>
    <for property="prop" range="[t-][1..4][-id]">
        <assert><eq op1="${data}" op2="${prop}"/></assert>
    </for>
   
    <for property="expr" range="/list/item/v2,/list/item[@v1 = 1]">
        <if>
            <or>
                <eq op1="${expr}" op2="/list/item/v2"/>
                <eq op1="${expr}" op2="/list/item[@v1 = 1]"/>
            </or>
            <else>
                <fail>Something was parsed wrong in the previous range got [${expr}]</fail>
            </else>
        </if> 
    </for>
   
    <!-- Validating long enumerations work well -->
    <property name="range" value=""/> 
    <for property="prop" range="1..1000">
        <property name="range" value="${range},XXX" overwrite="true"/> 
    </for>
   
    <property name="count" value="0"/> 
    <for property="X" range="${range}">
        <add op1="${count}" op2="1" result="count"/>
    </for>
    <assert><eq op1="${count}" op2="1001"/></assert> 
    
    <!-- Validate sequential ranges work for characters in ascending order -->
    <createrange name="alpha-seq" value="a..e"/>
    <createrange name="alpha-enum" value="a,b,c,d,e"/>
    <for property="i" range="1..5">
        <assert><eq op1="${alpha-seq}" op2="${alpha-enum}"/></assert>
    </for>

    <!-- Validate sequential ranges work for characters in descending order -->
    <createrange name="alpha-seq" value="e..a"/>
    <createrange name="alpha-enum" value="e,d,c,b,a"/>
    <for property="i" range="1..5">
        <assert><eq op1="${alpha-seq}" op2="${alpha-enum}"/></assert>
    </for>
    
</script>
