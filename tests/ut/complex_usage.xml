<?xml version="1.0" encoding="UTF-8"?>

<script xmlns="http://dtf.org/v1" name="complex_usage">
    <info>
        <author>
            <name>Rodney Gomes</name>
            <email>rlgomes@yahoo-inc.com</email>
        </author>
        <description>
        Unit testing for complex scenarios using some of DTF's more interesting 
        tags to generate certain types of load  patterns and being able to 
        validate that they followed the predefined pattern.
        </description>
    </info>
   
    <local>
    	<createstorage id="OUTPUT" path="${dtf.xml.path}/output"/>
        <createstorage id="INPUT" path="${dtf.xml.path}/input"/>

        <loadproperties uri="storage://INPUT/ut.properties"/>
    </local>

    <function name="checkDist">
        <param name="distid" type="required"/>
        <param name="uri"    type="required"/>
        <param name="fail"   default="true"/>
        
	    <query uri="${uri}"
	           event="${distid}"
	           cursor="dc"/>
	                   
	    <iterate cursor="dc">
	        <if>
	            <lt op1="${dc.workdone}" op2="${dc.workgoal}"/>
	            <then>
                    <if>
                        <eq op1="${fail}" op2="true"/>
                        <then>
	                       <fail message="Failed to hit goal of ${dc.workgoal} requests/second at ${dc.workunit}"/>
                        </then>
                    </if>
                    <log level="warn">Work done: ${dc.workdone} vs Work goal: ${dc.workgoal}</log>
	            </then>
	        </if>
	    </iterate>
    </function>
    
    <!-- Simulate operations that take 2ms and then try to use 5 threads to 
         guarantee a throughput of 1500 operations per second. --> 
    <record uri="storage://OUTPUT/dist_choices_1500.txt">
        <distribute id="mydist"
                    range="1..5"
                    iterations="10000"
                    func="const(1500)"
                    timer="12s"
                    property="iteration">
            <choices>
                <choose howoften="100%">
                    <event name="test.event1">
                        <attribute name="iteration" value="${iteration}"/>
                        <attribute name="worker"    value="${mydist.worker}"/>
                        <sleep time="2ms"/>
                    </event>
                </choose>
            </choices>
        </distribute>                         
    </record>     
    
    <call function="checkDist">
        <property name="distid" value="mydist"/>
        <property name="uri" value="storage://OUTPUT/dist_choices_1500.txt"/>
    </call>

    <!-- Similar to the previous test except that this one tries to guarantee
         a distribution right on the limit of threads and time per execution
         that it has -->
    <record uri="storage://OUTPUT/dist_choices_15.txt">
        <distribute id="mydist"
                    range="1..3"
                    iterations="9"
                    func="const(3)"
                    timer="6s"
                    property="iteration">
            <choices>
                <choose howoften="100%">
                    <event name="test.event1">
                        <attribute name="iteration" value="${iteration}"/>
                        <attribute name="worker"    value="${mydist.worker}"/>
                        <sleep time="250ms"/>
                    </event>
                </choose>
            </choices>
        </distribute>                         
    </record>     
    
    <call function="checkDist">
        <property name="distid" value="mydist"/>
        <property name="uri" value="storage://OUTPUT/dist_choices_15.txt"/>
        <property name="fail" value="false"/>
    </call>
    
</script> 