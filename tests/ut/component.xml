<?xml version="1.0" encoding="UTF-8"?>
<script xmlns="http://dtf.org/v1" name="component">
    <info>
         <author>
             <name>Rodney Gomes</name>
             <email>rlgomes@yahoo-inc.com</email>
         </author> 
         <description>
             Test the basic functionality of the component tag which is used to
             execute remote tasks on remote components in the DTF architecture.
         </description>
    </info>
    
    <local>
        <createstorage id="INPUT" path="${dtf.xml.path}/input"/>
        <createstorage id="OUTPUT" path="${dtf.xml.path}/output"/>
        
        <loadproperties uri="storage://INPUT/ut.properties"/>

        <lockcomponent id="DTFA1"/>
    </local>

    <try>
        <sequence>
            <local>
                <echo>About to lock a dtfa by name and this will fail.</echo>
                <lockcomponent id="DTFA2" timeout="0">
                	<attrib name="name" value="INEXISTENT"/>
                </lockcomponent>
                <fail message="The previous lockcomponent should have failed."/>
            </local>
        </sequence>
        <catch exception="${dtf.LockException}">
            <log level="debug">Caught Exception correctly: ${message}</log>
        </catch>
    </try>
  
    <!-- 
    Make sure parallel threads executing on the same component do not 
    accidentally share state.
    -->
    <parallelloop property="thread" range="1..3">
        <component id="DTFA1">
            <event name="agent.remote_event">
                <attribute name="thread" value="${thread}"/>
            </event>
        </component>
        <assert>
            <eq op1="${agent.remote_event.thread}" op2="${thread}"/>
        </assert>
    </parallelloop> 
   
    <!-- negative -->
    <try> 
	    <component id="inexistent">
	    </component>
        <catch exception="${dtf.DTFException}" property="message">
            <log level="debug">Caught Exception correctly: ${message}</log>
        </catch>
    </try>

    <function name="badfunction" export="true">
        <fail>On Purpose</fail>
    </function>
    
    <try> 
	    <component id="DTFA1">
            <call function="badfunction"/>
	    </component>
        <catch exception="${dtf.DTFException}" property="message">
            <sequence>
                <log level="debug">Caught Exception correctly: ${message}</log>
	            <assert>
	                <match source="${message}"
	                       expression=".* on component \[DTFA1\]"/>
	            </assert>
            </sequence>
        </catch>
    </try>
    
</script>
